InsertRandoSpeedTest:

What would you like L to be?: 10

Enter # strings to insert into ULLMap: shuaishuai
Please enter a positive integer: 10000
ULLMap: 0.12 sec

Enter # strings to insert into your MyHashMap: shuaishuai
Please enter a positive integer: 1000000
MyHashMap: 0.59 sec

Enter # strings to insert into Java's HashMap: shuaishuai
Please enter a positive integer: 1000000
Java's Built-in HashMap: 0.30 sec

hashmap速度太快了，一百万的数据也是秒出
MyHashMap 和 java本地的 hashmap 的差距并不是非常非常大




InsertInOrderSpeedTest:

Enter # strings to insert into MyHashMap: shuaishuai
Please enter a positive integer: 10000000
MyHashMap: 2.88 sec

Enter # strings to insert into Java's HashMap: shuaishuai
Please enter a positive integer: 10000000
Java's Built-in HashMap: 1.45 sec


Enter # strings to insert into MyHashMap: shuaishuai
Please enter a positive integer: 20000000
MyHashMap: 5.92 sec

Enter # strings to insert into Java's HashMap: shuaishuai
Please enter a positive integer: 20000000
Java's Built-in HashMap: 3.40 sec

java本地的hashmap 速度 大概是 MyHashMap 的两倍

HashMap 的 插入速度 远远快于 BSTMap / TreeMap, 有大量数据需要插入的话，选择HashMap会比较好



BucketsSpeedTest:

What would you like L to be?: 10

Enter # strings to insert into each map: shuaishuai
Please enter a positive integer: 10000000
MyHashMap with ArrayList buckets: 6.80 sec
MyHashMap with LinkedList buckets: 6.66 sec
MyHashMap with HashSet buckets: 12.08 sec
MyHashMap with Stack buckets: 8.27 sec
MyHashMap with ArrayDeque buckets: 8.17 sec

以ArrayList 和 LinkedList 作为 bucket 的速度 会比其它快很多